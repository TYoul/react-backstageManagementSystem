[{"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts":"1","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts":"2","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts":"3","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\line\\Line.tsx":"4","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\detail\\Detail.tsx":"5","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\actions.ts":"6","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx":"7","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts":"8","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx":"9","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx":"10","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts":"11","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\index.tsx":"12","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\reducer.ts":"13","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\container\\Container.tsx":"14","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\login\\Login.tsx":"15","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\hooks.ts":"16","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\pie\\Pie.tsx":"17","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\login.ts":"18","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\rich-text-editor\\RichTextEditor.tsx":"19","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\config.ts":"20","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\role\\Role.tsx":"21","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\role.ts":"22","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\constants.ts":"23","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\actions.ts":"24","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\reducer.ts":"25","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\constants.ts":"26","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\header\\Header.tsx":"27","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\product.ts":"28","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\request.ts":"29","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\home\\Home.tsx":"30","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\menu-config.js":"31","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\reducer.ts":"32","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\user\\User.tsx":"33","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\actions.ts":"34"},{"size":673,"mtime":1613231465920,"results":"35","hashOfConfig":"36"},{"size":533,"mtime":1612030408818,"results":"37","hashOfConfig":"36"},{"size":1633,"mtime":1611511961949,"results":"38","hashOfConfig":"36"},{"size":129,"mtime":1611503655286,"results":"39","hashOfConfig":"36"},{"size":2284,"mtime":1612530785274,"results":"40","hashOfConfig":"36"},{"size":4349,"mtime":1613165605360,"results":"41","hashOfConfig":"36"},{"size":3920,"mtime":1613028741384,"results":"42","hashOfConfig":"36"},{"size":232,"mtime":1612762706876,"results":"43","hashOfConfig":"36"},{"size":5318,"mtime":1613168235224,"results":"44","hashOfConfig":"36"},{"size":6121,"mtime":1613168462354,"results":"45","hashOfConfig":"36"},{"size":2755,"mtime":1613168429609,"results":"46","hashOfConfig":"36"},{"size":306,"mtime":1611389802783,"results":"47","hashOfConfig":"36"},{"size":1247,"mtime":1611923805561,"results":"48","hashOfConfig":"36"},{"size":2702,"mtime":1612461591213,"results":"49","hashOfConfig":"36"},{"size":2475,"mtime":1612764262679,"results":"50","hashOfConfig":"36"},{"size":207,"mtime":1611386960548,"results":"51","hashOfConfig":"36"},{"size":122,"mtime":1611503739389,"results":"52","hashOfConfig":"36"},{"size":203,"mtime":1611393504677,"results":"53","hashOfConfig":"36"},{"size":1747,"mtime":1613167887214,"results":"54","hashOfConfig":"36"},{"size":194,"mtime":1611407749728,"results":"55","hashOfConfig":"36"},{"size":5999,"mtime":1613411722225,"results":"56","hashOfConfig":"36"},{"size":757,"mtime":1613359776075,"results":"57","hashOfConfig":"36"},{"size":191,"mtime":1613410061700,"results":"58","hashOfConfig":"36"},{"size":2348,"mtime":1613410450844,"results":"59","hashOfConfig":"36"},{"size":910,"mtime":1613411316118,"results":"60","hashOfConfig":"36"},{"size":133,"mtime":1611488934222,"results":"61","hashOfConfig":"36"},{"size":3065,"mtime":1612626934645,"results":"62","hashOfConfig":"36"},{"size":2060,"mtime":1613025237271,"results":"63","hashOfConfig":"36"},{"size":1527,"mtime":1611513113892,"results":"64","hashOfConfig":"36"},{"size":129,"mtime":1611504166763,"results":"65","hashOfConfig":"36"},{"size":1642,"mtime":1611735319628,"results":"66","hashOfConfig":"36"},{"size":1441,"mtime":1612084245801,"results":"67","hashOfConfig":"36"},{"size":129,"mtime":1611658803140,"results":"68","hashOfConfig":"36"},{"size":3352,"mtime":1612087025224,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"1xiz47m",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts",["145"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport loginReducer from \"./login/reducer\";\r\nimport categoryReducer from \"./category/reducer\";\r\nimport productReducer from \"./product/reducer\";\r\nimport roleReducer from \"./role/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  category: categoryReducer,\r\n  product: productReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\line\\Line.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\detail\\Detail.tsx",["146"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Detail.scss\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Card, Button, List } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { cancelResetRendAction } from \"../../../redux/product/actions\";\r\n\r\ninterface params {\r\n  id: string;\r\n}\r\n\r\ninterface localtion {\r\n  state: {\r\n    name: string;\r\n    desc: string;\r\n    price: string;\r\n    imgs: string[];\r\n    detail: string;\r\n  };\r\n}\r\n\r\n// 详情或者修改页面\r\nconst DetailPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<params>();\r\n  const history = useHistory();\r\n  const localtion: localtion = useLocation();\r\n  const { name, desc, price, imgs, detail } = localtion.state;\r\n  console.log(localtion);\r\n\r\n  const createDetail = () => {\r\n    return { __html: detail };\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <>\r\n          <Button\r\n            type=\"link\"\r\n            className=\"detail-button\"\r\n            onClick={(e) => {\r\n              dispatch(cancelResetRendAction(false));\r\n              history.goBack();\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined />\r\n          </Button>\r\n          商品详情\r\n        </>\r\n      }\r\n    >\r\n      <List>\r\n        <List.Item className=\"product-list\">\r\n          <span className=\"product-name\">商品名称：</span>\r\n          <span>{name}</span>\r\n        </List.Item>\r\n        <List.Item className=\"product-list\">\r\n          <span className=\"product-name\">商品描述：</span>\r\n          <span>{desc}</span>\r\n        </List.Item>\r\n        <List.Item className=\"product-list\">\r\n          <span className=\"product-name\">商品价格：</span>\r\n          <span>￥：{price}</span>\r\n        </List.Item>\r\n        <List.Item className=\"product-list\">\r\n          <span className=\"product-name\">商品图片：</span>\r\n          <img src={`/upload/${imgs[0]}`} alt=\"商品图片\" />\r\n        </List.Item>\r\n        <List.Item className=\"product-list\">\r\n          <span className=\"product-name\">商品详情：</span>\r\n          <span dangerouslySetInnerHTML={createDetail()}></span>\r\n        </List.Item>\r\n      </List>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n",["147","148"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\actions.ts",["149","150","151","152","153","154","155","156"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx",["157"],"import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"../../../redux/hooks\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Card, Button, Form, Input, Select, message } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { addProduct, updateProduct } from \"../../../services/product\";\r\nimport PicturesWall from \"../../../components/picture-wall/PictureWall\";\r\nimport RichTextEditor from \"../../../components/rich-text-editor/RichTextEditor\";\r\n\r\nimport {\r\n  cancelResetRendAction,\r\n  getCategoryListAction,\r\n  updateProductAction,\r\n} from \"../../../redux/product/actions\";\r\n\r\nconst { Option } = Select;\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\ninterface localtion {\r\n  state: {\r\n    _id: string;\r\n    name: string;\r\n    desc: string;\r\n    price: string;\r\n    imgs: string[];\r\n    detail: string;\r\n  };\r\n}\r\n\r\nconst AddUpdatePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const pictureWall = useRef<any>();\r\n  const richTextEditor = useRef<any>();\r\n  const categoryList = useSelector((state) => state.product.categoryList);\r\n\r\n  const history = useHistory();\r\n  const localtion: localtion = useLocation();\r\n  const match = useParams<RouteParams>();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryListAction());\r\n    if (match.id) {\r\n      form.setFieldsValue(localtion.state);\r\n      pictureWall.current.setImg(localtion.state.imgs);\r\n      richTextEditor.current.setRichText(localtion.state.detail);\r\n      console.log(localtion.state);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    if (errorInfo) return;\r\n  };\r\n\r\n  // form表单提交\r\n  const onFinish = async (values: any) => {\r\n    // 从pictureWall组件中获取到已经上传的图片数组\r\n    const imgs = pictureWall.current.getImg();\r\n    const detail = richTextEditor.current.getRichText();\r\n    let result: any;\r\n    // 判断是否有id，有id的化是修改商品，没有的化是添加商品\r\n    match.id\r\n      ? (result = await updateProduct({\r\n          ...values,\r\n          _id: match.id,\r\n          imgs,\r\n          detail,\r\n        }))\r\n      : await addProduct({ ...values, imgs, detail });\r\n    const { status, msg } = result;\r\n    if (status === 0) {\r\n      message.success(\"添加商品成功\");\r\n      dispatch(updateProductAction(true));\r\n      dispatch(cancelResetRendAction(true));\r\n      history.replace(\"/prod/product\");\r\n    } else message.error(msg, 1);\r\n  };\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <>\r\n          <Button\r\n            type=\"link\"\r\n            className=\"detail-button\"\r\n            onClick={(e) => {\r\n              dispatch(updateProductAction(false));\r\n              dispatch(cancelResetRendAction(false));\r\n              history.goBack();\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined />\r\n          </Button>\r\n          商品{match.id ? \"修改\" : \"详情\"}\r\n        </>\r\n      }\r\n    >\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        className=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinishFailed={onFinishFailed}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"商品名称：\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"请输入商品名称\" }]}\r\n        >\r\n          <Input placeholder=\"商品名称\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"商品描述：\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入商品描述\" }]}\r\n        >\r\n          <Input placeholder=\"商品描述\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品价格：\"\r\n          name=\"price\"\r\n          rules={[{ required: true, message: \"请输入商品价格\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"商品价格\"\r\n            prefix=\"￥\"\r\n            suffix=\"元\"\r\n            type=\"number\"\r\n            style={{ width: \"20%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品分类：\"\r\n          name=\"categoryId\"\r\n          rules={[{ required: true, message: \"请输入商品分类\" }]}\r\n          initialValue=\"\"\r\n        >\r\n          <Select style={{ width: 120 }} onChange={handleChange}>\r\n            <Option value=\"\">请选择分类</Option>\r\n            {categoryList.map((item: any) => (\r\n              <Option value={item._id} key={item._id}>\r\n                {item.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"商品图片：\" name=\"imgs\">\r\n          <PicturesWall ref={pictureWall} />\r\n        </Form.Item>\r\n        <Form.Item label=\"商品详情：\" name=\"detail\" wrapperCol={{ md: 8 }}>\r\n          <RichTextEditor ref={richTextEditor} />\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: \"50px\" }}>\r\n          提交\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUpdatePage;\r\n",["158","159"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts",[],["160","161"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\container\\Container.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\hooks.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\pie\\Pie.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\login.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\rich-text-editor\\RichTextEditor.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\config.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\role\\Role.tsx",["162"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport {\r\n  getRoleListAction,\r\n  manageRoleAddAction,\r\n  setUpAuthorityAction,\r\n} from \"../../redux/role/actions\";\r\nimport { manageRoleUpdate } from \"../../services/role\";\r\nimport dayjs from \"dayjs\";\r\nimport { Card, Button, Table, Modal, Form, Input, message, Tree } from \"antd\";\r\nimport { ColumnsType } from \"antd/es/table\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport menuList from \"../../components/left-menu/menu-config\";\r\n\r\nconst RolePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  // 角色列表\r\n  const roleList = useSelector((state) => state.role?.roleList);\r\n  // 授权人名称\r\n  const username = useSelector((state) => state.login.user.username);\r\n\r\n  // 权限设置弹窗显示\r\n  const [isAuthorityModalVisible, setIsAuthorityModalVisible] = useState(false);\r\n  // 新增角色弹窗显示\r\n  const [isAddRoleModalVisible, setIsAddRoleModalVisible] = useState(false);\r\n  // 树形控件数据\r\n  // 展开的节点\r\n  const [expandedKeys, setExpandedKeys] = useState<React.Key[]>([]);\r\n  // 选中的节点\r\n  const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([]);\r\n  // 自动展开父节点\r\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\r\n\r\n  // 权限数据网络请求参数：_id,\r\n  const [_id, setId] = useState(\"\");\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  // 数据初始化\r\n  useEffect(() => {\r\n    dispatch(getRoleListAction());\r\n  }, [dispatch]);\r\n\r\n  // 新增角色弹窗\r\n  const showAddRoleModal = () => {\r\n    setIsAddRoleModalVisible(true);\r\n  };\r\n\r\n  // 新增角色弹窗：确认回调\r\n  const handleAddRoleOk = async () => {\r\n    try {\r\n      const { roleName } = await form.validateFields();\r\n      dispatch(manageRoleAddAction(roleName));\r\n      setIsAddRoleModalVisible(false);\r\n      form.resetFields();\r\n    } catch (error) {\r\n      message.warning(\"表单输入有误，请检查\", 1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  // 新增角色弹窗：取消回调\r\n  const handleAddRoleCancel = () => {\r\n    form.resetFields();\r\n    setIsAddRoleModalVisible(false);\r\n  };\r\n\r\n  // 设置权限弹窗\r\n  const showAuthModal = ({ _id }: { _id: string }) => {\r\n    const result = roleList.find((item: any) => item._id === _id);\r\n    if (result) setCheckedKeys(result.menus);\r\n    // debugger;\r\n    setCheckedKeys(result.menus);\r\n    setId(_id);\r\n    setIsAuthorityModalVisible(true);\r\n  };\r\n\r\n  // 设置权限弹窗：确认回调\r\n  const handleAuthOk = () => {\r\n    dispatch(\r\n      setUpAuthorityAction({\r\n        _id,\r\n        menus: checkedKeys as string[],\r\n        auth_time: Date.now(),\r\n        auth_name: username,\r\n      })\r\n    );\r\n    setIsAuthorityModalVisible(false);\r\n  };\r\n\r\n  // 设置权限弹窗：取消回调\r\n  const handleAuthCancel = () => {\r\n    setIsAuthorityModalVisible(false);\r\n  };\r\n\r\n  const dataSource = roleList;\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: \"角色名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: \"20%\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      // dataIndex: \"create_time\",\r\n      key: \"create_time\",\r\n      width: \"25%\",\r\n      align: \"center\",\r\n      render: ({ create_time }) =>\r\n        dayjs(create_time).format(\"YYYY年MM月DD日 HH:mm:ss\"),\r\n    },\r\n    {\r\n      title: \"授权时间\",\r\n      // dataIndex: \"auth_time\",\r\n      key: \"auth_time\",\r\n      width: \"25%\",\r\n      align: \"center\",\r\n      render: ({ auth_time }) =>\r\n        auth_time ? dayjs(auth_time).format(\"YYYY年MM月DD日 HH:mm:ss\") : \"\",\r\n    },\r\n    {\r\n      title: \"授权人\",\r\n      dataIndex: \"auth_name\",\r\n      key: \"auth_name\",\r\n      width: \"20%\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      // dataIndex: \"operation\",\r\n      key: \"operation\",\r\n      width: \"20%\",\r\n      align: \"center\",\r\n      render: (item) => (\r\n        <Button type=\"link\" onClick={(e) => showAuthModal(item)}>\r\n          设置权限\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 树形控件数据\r\n  const treeData = menuList;\r\n\r\n  const onExpand = (expandedKeys: React.Key[]) => {\r\n    console.log(\"onExpand\", expandedKeys);\r\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n    setExpandedKeys(expandedKeys);\r\n    setAutoExpandParent(false);\r\n  };\r\n\r\n  const onCheck = (checkedKeys: any) => {\r\n    console.log(\"onCheck\", checkedKeys);\r\n    setCheckedKeys(checkedKeys);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Button type=\"primary\" onClick={showAddRoleModal}>\r\n          <PlusOutlined />\r\n          新增角色\r\n        </Button>\r\n      }\r\n    >\r\n      <Table bordered dataSource={dataSource} rowKey=\"_id\" columns={columns} />\r\n      <Modal\r\n        title=\"设置权限\"\r\n        cancelText=\"取消\"\r\n        okText=\"确认\"\r\n        visible={isAuthorityModalVisible}\r\n        onOk={handleAuthOk}\r\n        onCancel={handleAuthCancel}\r\n      >\r\n        <Tree\r\n          checkable\r\n          onExpand={onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n          onCheck={onCheck}\r\n          checkedKeys={checkedKeys}\r\n          treeData={treeData}\r\n        />\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"添加角色\"\r\n        cancelText=\"取消\"\r\n        okText=\"确认\"\r\n        visible={isAddRoleModalVisible}\r\n        onOk={handleAddRoleOk}\r\n        onCancel={handleAddRoleCancel}\r\n      >\r\n        <Form form={form}>\r\n          <Form.Item\r\n            label=\"角色名称\"\r\n            name=\"roleName\"\r\n            rules={[{ required: true, message: \"角色名称必须输入\" }]}\r\n          >\r\n            <Input placeholder=\"请输入角色名称\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\role.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\actions.ts",["163","164","165"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\role\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\header\\Header.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\product.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\request.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\home\\Home.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\menu-config.js",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\user\\User.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\actions.ts",[],{"ruleId":"166","severity":1,"message":"167","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":26,"column":9,"nodeType":"168","messageId":"169","endLine":26,"endColumn":15},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":70,"column":7,"nodeType":"168","messageId":"177","endLine":70,"endColumn":27},{"ruleId":"175","severity":1,"message":"178","line":90,"column":14,"nodeType":"168","messageId":"177","endLine":90,"endColumn":36},{"ruleId":"175","severity":1,"message":"179","line":97,"column":14,"nodeType":"168","messageId":"177","endLine":97,"endColumn":37},{"ruleId":"175","severity":1,"message":"180","line":104,"column":14,"nodeType":"168","messageId":"177","endLine":104,"endColumn":35},{"ruleId":"175","severity":1,"message":"181","line":111,"column":14,"nodeType":"168","messageId":"177","endLine":111,"endColumn":33},{"ruleId":"175","severity":1,"message":"182","line":136,"column":14,"nodeType":"168","messageId":"177","endLine":136,"endColumn":32},{"ruleId":"175","severity":1,"message":"183","line":152,"column":14,"nodeType":"168","messageId":"177","endLine":152,"endColumn":36},{"ruleId":"175","severity":1,"message":"184","line":178,"column":14,"nodeType":"168","messageId":"177","endLine":178,"endColumn":35},{"ruleId":"185","severity":1,"message":"186","line":52,"column":6,"nodeType":"187","endLine":52,"endColumn":16,"suggestions":"188"},{"ruleId":"171","replacedBy":"189"},{"ruleId":"173","replacedBy":"190"},{"ruleId":"171","replacedBy":"191"},{"ruleId":"173","replacedBy":"192"},{"ruleId":"166","severity":1,"message":"193","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":26},{"ruleId":"175","severity":1,"message":"194","line":47,"column":14,"nodeType":"168","messageId":"177","endLine":47,"endColumn":31},{"ruleId":"175","severity":1,"message":"195","line":63,"column":14,"nodeType":"168","messageId":"177","endLine":63,"endColumn":33},{"ruleId":"175","severity":1,"message":"196","line":76,"column":14,"nodeType":"168","messageId":"177","endLine":76,"endColumn":34},"@typescript-eslint/no-unused-vars","'roleReducer' is defined but never used.","Identifier","unusedVar","'params' is assigned a value but never used.","no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-redeclare","'productSuccessAction' is already defined.","redeclared","'updateSearchTypeAction' is already defined.","'updateSearchValueAction' is already defined.","'cancelResetRendAction' is already defined.","'updateProductAction' is already defined.","'updateStatusAction' is already defined.","'updateSearchListAction' is already defined.","'getCategoryListAction' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form', 'localtion.state', and 'match.id'. Either include them or remove the dependency array.","ArrayExpression",["199"],["197"],["198"],["197"],["198"],"'manageRoleUpdate' is defined but never used.","'getRoleListAction' is already defined.","'manageRoleAddAction' is already defined.","'setUpAuthorityAction' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [dispatch, form, localtion.state, match.id]",{"range":"202","text":"203"},[1634,1644],"[dispatch, form, localtion.state, match.id]"]