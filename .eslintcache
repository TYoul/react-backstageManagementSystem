[{"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts":"1","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts":"2","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts":"3","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\line\\Line.tsx":"4","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\detail\\Detail.tsx":"5","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\actions.ts":"6","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx":"7","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts":"8","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx":"9","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx":"10","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts":"11"},{"size":630,"mtime":1612194937193,"results":"12","hashOfConfig":"13"},{"size":533,"mtime":1612030408818,"results":"14","hashOfConfig":"13"},{"size":1633,"mtime":1611511961949,"results":"15","hashOfConfig":"13"},{"size":129,"mtime":1611503655286,"results":"16","hashOfConfig":"13"},{"size":2284,"mtime":1612530785274,"results":"17","hashOfConfig":"13"},{"size":4349,"mtime":1613165605360,"results":"18","hashOfConfig":"13"},{"size":3920,"mtime":1613028741384,"results":"19","hashOfConfig":"13"},{"size":232,"mtime":1612762706876,"results":"20","hashOfConfig":"13"},{"size":5318,"mtime":1613168235224,"results":"21","hashOfConfig":"13"},{"size":6121,"mtime":1613168462354,"results":"22","hashOfConfig":"13"},{"size":2755,"mtime":1613168429609,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xiz47m",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\line\\Line.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\detail\\Detail.tsx",["47"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\actions.ts",["48","49","50","51","52","53","54","55"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx",["56"],"import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"../../../redux/hooks\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Card, Button, Form, Input, Select, message } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { addProduct, updateProduct } from \"../../../services/product\";\r\nimport PicturesWall from \"../../../components/picture-wall/PictureWall\";\r\nimport RichTextEditor from \"../../../components/rich-text-editor/RichTextEditor\";\r\n\r\nimport {\r\n  cancelResetRendAction,\r\n  getCategoryListAction,\r\n  updateProductAction,\r\n} from \"../../../redux/product/actions\";\r\n\r\nconst { Option } = Select;\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\ninterface localtion {\r\n  state: {\r\n    _id: string;\r\n    name: string;\r\n    desc: string;\r\n    price: string;\r\n    imgs: string[];\r\n    detail: string;\r\n  };\r\n}\r\n\r\nconst AddUpdatePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const pictureWall = useRef<any>();\r\n  const richTextEditor = useRef<any>();\r\n  const categoryList = useSelector((state) => state.product.categoryList);\r\n\r\n  const history = useHistory();\r\n  const localtion: localtion = useLocation();\r\n  const match = useParams<RouteParams>();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryListAction());\r\n    if (match.id) {\r\n      form.setFieldsValue(localtion.state);\r\n      pictureWall.current.setImg(localtion.state.imgs);\r\n      richTextEditor.current.setRichText(localtion.state.detail);\r\n      console.log(localtion.state);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    if (errorInfo) return;\r\n  };\r\n\r\n  // form表单提交\r\n  const onFinish = async (values: any) => {\r\n    // 从pictureWall组件中获取到已经上传的图片数组\r\n    const imgs = pictureWall.current.getImg();\r\n    const detail = richTextEditor.current.getRichText();\r\n    let result: any;\r\n    // 判断是否有id，有id的化是修改商品，没有的化是添加商品\r\n    match.id\r\n      ? (result = await updateProduct({\r\n          ...values,\r\n          _id: match.id,\r\n          imgs,\r\n          detail,\r\n        }))\r\n      : await addProduct({ ...values, imgs, detail });\r\n    const { status, msg } = result;\r\n    if (status === 0) {\r\n      message.success(\"添加商品成功\");\r\n      dispatch(updateProductAction(true));\r\n      dispatch(cancelResetRendAction(true));\r\n      history.replace(\"/prod/product\");\r\n    } else message.error(msg, 1);\r\n  };\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <>\r\n          <Button\r\n            type=\"link\"\r\n            className=\"detail-button\"\r\n            onClick={(e) => {\r\n              dispatch(updateProductAction(false));\r\n              dispatch(cancelResetRendAction(false));\r\n              history.goBack();\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined />\r\n          </Button>\r\n          商品{match.id ? \"修改\" : \"详情\"}\r\n        </>\r\n      }\r\n    >\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        className=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinishFailed={onFinishFailed}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"商品名称：\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"请输入商品名称\" }]}\r\n        >\r\n          <Input placeholder=\"商品名称\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"商品描述：\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入商品描述\" }]}\r\n        >\r\n          <Input placeholder=\"商品描述\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品价格：\"\r\n          name=\"price\"\r\n          rules={[{ required: true, message: \"请输入商品价格\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"商品价格\"\r\n            prefix=\"￥\"\r\n            suffix=\"元\"\r\n            type=\"number\"\r\n            style={{ width: \"20%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品分类：\"\r\n          name=\"categoryId\"\r\n          rules={[{ required: true, message: \"请输入商品分类\" }]}\r\n          initialValue=\"\"\r\n        >\r\n          <Select style={{ width: 120 }} onChange={handleChange}>\r\n            <Option value=\"\">请选择分类</Option>\r\n            {categoryList.map((item: any) => (\r\n              <Option value={item._id} key={item._id}>\r\n                {item.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"商品图片：\" name=\"imgs\">\r\n          <PicturesWall ref={pictureWall} />\r\n        </Form.Item>\r\n        <Form.Item label=\"商品详情：\" name=\"detail\" wrapperCol={{ md: 8 }}>\r\n          <RichTextEditor ref={richTextEditor} />\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: \"50px\" }}>\r\n          提交\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUpdatePage;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts",[],{"ruleId":"57","severity":1,"message":"58","line":26,"column":9,"nodeType":"59","messageId":"60","endLine":26,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":70,"column":7,"nodeType":"59","messageId":"63","endLine":70,"endColumn":27},{"ruleId":"61","severity":1,"message":"64","line":90,"column":14,"nodeType":"59","messageId":"63","endLine":90,"endColumn":36},{"ruleId":"61","severity":1,"message":"65","line":97,"column":14,"nodeType":"59","messageId":"63","endLine":97,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":104,"column":14,"nodeType":"59","messageId":"63","endLine":104,"endColumn":35},{"ruleId":"61","severity":1,"message":"67","line":111,"column":14,"nodeType":"59","messageId":"63","endLine":111,"endColumn":33},{"ruleId":"61","severity":1,"message":"68","line":136,"column":14,"nodeType":"59","messageId":"63","endLine":136,"endColumn":32},{"ruleId":"61","severity":1,"message":"69","line":152,"column":14,"nodeType":"59","messageId":"63","endLine":152,"endColumn":36},{"ruleId":"61","severity":1,"message":"70","line":178,"column":14,"nodeType":"59","messageId":"63","endLine":178,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":52,"column":6,"nodeType":"73","endLine":52,"endColumn":16,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'params' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'productSuccessAction' is already defined.","redeclared","'updateSearchTypeAction' is already defined.","'updateSearchValueAction' is already defined.","'cancelResetRendAction' is already defined.","'updateProductAction' is already defined.","'updateStatusAction' is already defined.","'updateSearchListAction' is already defined.","'getCategoryListAction' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form', 'localtion.state', and 'match.id'. Either include them or remove the dependency array.","ArrayExpression",["75"],{"desc":"76","fix":"77"},"Update the dependencies array to be: [dispatch, form, localtion.state, match.id]",{"range":"78","text":"79"},[1634,1644],"[dispatch, form, localtion.state, match.id]"]