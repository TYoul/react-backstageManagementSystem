[{"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx":"1","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx":"2"},{"size":3702,"mtime":1612707406515,"results":"3","hashOfConfig":"4"},{"size":3053,"mtime":1612707341188,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1xiz47m",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx",["11"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"../../../redux/hooks\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Card, Button, Form, Input, Select } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nimport PicturesWall from \"../../../components/picture-wall/PictureWall\";\r\n\r\nimport {\r\n  cancelResetRendAction,\r\n  getCategoryListAction,\r\n} from \"../../../redux/product/actions\";\r\n\r\nconst { Option } = Select;\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst AddUpdatePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const categoryList = useSelector((state) => state.product.categoryList);\r\n\r\n  const history = useHistory();\r\n  const match = useParams<RouteParams>();\r\n  console.log(match.id);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryListAction());\r\n  }, []);\r\n\r\n  const layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    if (errorInfo) return;\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <>\r\n          <Button\r\n            type=\"link\"\r\n            className=\"detail-button\"\r\n            onClick={(e) => {\r\n              dispatch(cancelResetRendAction(false));\r\n              history.goBack();\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined />\r\n          </Button>\r\n          商品详情\r\n        </>\r\n      }\r\n    >\r\n      <Form\r\n        {...layout}\r\n        className=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinishFailed={onFinishFailed}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"商品名称：\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"请输入商品名称\" }]}\r\n        >\r\n          <Input placeholder=\"商品名称\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"商品描述：\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入商品描述\" }]}\r\n        >\r\n          <Input placeholder=\"商品描述\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品价格：\"\r\n          name=\"price\"\r\n          rules={[{ required: true, message: \"请输入商品价格\" }]}\r\n        >\r\n          <Input placeholder=\"商品价格\" prefix=\"￥\" suffix=\"元\" type=\"number\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品分类：\"\r\n          name=\"categoryId\"\r\n          rules={[{ required: true, message: \"请输入商品分类\" }]}\r\n          initialValue=\"\"\r\n        >\r\n          <Select style={{ width: 120 }} onChange={handleChange}>\r\n            <Option value=\"\">请选择分类</Option>\r\n            {categoryList.map((item: any) => (\r\n              <Option value={item._id} key={item._id}>\r\n                {item.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品图片：\"\r\n          name=\"imgs\"\r\n          rules={[{ required: true, message: \"请输入商品图片\" }]}\r\n        >\r\n          <PicturesWall />\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          label=\"商品详情：\"\r\n          name=\"detail\"\r\n          rules={[{ required: true, message: \"请输入商品详情\" }]}\r\n        >\r\n          此处为富文本编辑器\r\n        </Form.Item> */}\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUpdatePage;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx",[],{"ruleId":"12","severity":1,"message":"13","line":30,"column":6,"nodeType":"14","endLine":30,"endColumn":8,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [dispatch]",{"range":"19","text":"20"},[895,897],"[dispatch]"]