[{"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx":"1","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx":"2","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\index.tsx":"3","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts":"4","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\login\\Login.tsx":"5","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\container\\Container.tsx":"6","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\reducer.ts":"7","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts":"8","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\header\\Header.tsx":"9","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\user\\User.tsx":"10","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\bar\\Bar.tsx":"11","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\config.ts":"12","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\config\\index.ts":"13","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\reducer.ts":"14","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\LeftMenu.tsx":"15","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\menu-config.js":"16","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts":"17","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\App.tsx":"18","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts":"19","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\category\\Category.tsx":"20","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\constants.ts":"21","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\home\\Home.tsx":"22","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\role\\Role.tsx":"23","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\hooks.ts":"24","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\login.ts":"25","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\request.ts":"26","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\rich-text-editor\\RichTextEditor.tsx":"27","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx":"28","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts":"29","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\product.ts":"30"},{"size":4664,"mtime":1613025902275,"results":"31","hashOfConfig":"32"},{"size":3516,"mtime":1612767749595,"results":"33","hashOfConfig":"32"},{"size":306,"mtime":1611389802783,"results":"34","hashOfConfig":"32"},{"size":2515,"mtime":1612542388111,"results":"35","hashOfConfig":"32"},{"size":2475,"mtime":1612764262679,"results":"36","hashOfConfig":"32"},{"size":2702,"mtime":1612461591213,"results":"37","hashOfConfig":"32"},{"size":1441,"mtime":1612084245801,"results":"38","hashOfConfig":"32"},{"size":533,"mtime":1612030408818,"results":"39","hashOfConfig":"40"},{"size":3065,"mtime":1612626934645,"results":"41","hashOfConfig":"32"},{"size":129,"mtime":1611658803140,"results":"42","hashOfConfig":"32"},{"size":126,"mtime":1611503667582,"results":"43","hashOfConfig":"32"},{"size":194,"mtime":1611407749728,"results":"44","hashOfConfig":"32"},{"size":61,"mtime":1612710695385,"results":"45","hashOfConfig":"32"},{"size":1247,"mtime":1611923805561,"results":"46","hashOfConfig":"32"},{"size":1888,"mtime":1612448910947,"results":"47","hashOfConfig":"32"},{"size":1642,"mtime":1611735319628,"results":"48","hashOfConfig":"32"},{"size":232,"mtime":1612762706876,"results":"49","hashOfConfig":"32"},{"size":408,"mtime":1611509362637,"results":"50","hashOfConfig":"40"},{"size":1633,"mtime":1611511961949,"results":"51","hashOfConfig":"40"},{"size":4335,"mtime":1612631447377,"results":"52","hashOfConfig":"32"},{"size":133,"mtime":1611488934222,"results":"53","hashOfConfig":"32"},{"size":129,"mtime":1611504166763,"results":"54","hashOfConfig":"32"},{"size":129,"mtime":1611503683657,"results":"55","hashOfConfig":"32"},{"size":207,"mtime":1611386960548,"results":"56","hashOfConfig":"32"},{"size":203,"mtime":1611393504677,"results":"57","hashOfConfig":"32"},{"size":1527,"mtime":1611513113892,"results":"58","hashOfConfig":"32"},{"size":1321,"mtime":1612982531757,"results":"59","hashOfConfig":"32"},{"size":5790,"mtime":1613025634606,"results":"60","hashOfConfig":"32"},{"size":630,"mtime":1612194937193,"results":"61","hashOfConfig":"32"},{"size":2060,"mtime":1613025237271,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"1xiz47m",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uwf58e",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\addUpdate\\AddUpdate.tsx",["129"],"import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"../../../redux/hooks\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Card, Button, Form, Input, Select, message } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { addProduct } from \"../../../services/product\";\r\n\r\nimport PicturesWall from \"../../../components/picture-wall/PictureWall\";\r\nimport RichTextEditor from \"../../../components/rich-text-editor/RichTextEditor\";\r\n\r\nimport {\r\n  cancelResetRendAction,\r\n  getCategoryListAction,\r\n} from \"../../../redux/product/actions\";\r\n\r\nconst { Option } = Select;\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\ninterface localtion {\r\n  state: {\r\n    _id: string;\r\n    name: string;\r\n    desc: string;\r\n    price: string;\r\n    imgs: string[];\r\n    detail: string;\r\n  };\r\n}\r\n\r\nconst AddUpdatePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const pictureWall = useRef<any>();\r\n  const richTextEditor = useRef<any>();\r\n  const categoryList = useSelector((state) => state.product.categoryList);\r\n\r\n  const history = useHistory();\r\n  const localtion: localtion = useLocation();\r\n  const match = useParams<RouteParams>();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategoryListAction());\r\n    if (match.id) {\r\n      form.setFieldsValue(localtion.state);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    if (errorInfo) return;\r\n  };\r\n\r\n  const onFinish = async (values: any) => {\r\n    // 从pictureWall组件中获取到已经上传的图片数组\r\n    const imgs = pictureWall.current.getImg();\r\n    const detail = richTextEditor.current.getRichText();\r\n    const result: any = await addProduct({ ...values, imgs, detail });\r\n    const { status, msg } = result;\r\n    if (status === 0) {\r\n      message.success(\"添加商品成功\");\r\n      history.replace(\"/prod/product\");\r\n    } else message.error(msg, 1);\r\n  };\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <>\r\n          <Button\r\n            type=\"link\"\r\n            className=\"detail-button\"\r\n            onClick={(e) => {\r\n              dispatch(cancelResetRendAction(false));\r\n              history.goBack();\r\n            }}\r\n          >\r\n            <ArrowLeftOutlined />\r\n          </Button>\r\n          商品详情\r\n        </>\r\n      }\r\n    >\r\n      <Form\r\n        {...layout}\r\n        className=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinishFailed={onFinishFailed}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"商品名称：\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"请输入商品名称\" }]}\r\n        >\r\n          <Input placeholder=\"商品名称\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"商品描述：\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入商品描述\" }]}\r\n        >\r\n          <Input placeholder=\"商品描述\" style={{ width: \"20%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品价格：\"\r\n          name=\"price\"\r\n          rules={[{ required: true, message: \"请输入商品价格\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"商品价格\"\r\n            prefix=\"￥\"\r\n            suffix=\"元\"\r\n            type=\"number\"\r\n            style={{ width: \"20%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"商品分类：\"\r\n          name=\"categoryId\"\r\n          rules={[{ required: true, message: \"请输入商品分类\" }]}\r\n          initialValue=\"\"\r\n        >\r\n          <Select style={{ width: 120 }} onChange={handleChange}>\r\n            <Option value=\"\">请选择分类</Option>\r\n            {categoryList.map((item: any) => (\r\n              <Option value={item._id} key={item._id}>\r\n                {item.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"商品图片：\" name=\"imgs\">\r\n          <PicturesWall ref={pictureWall} />\r\n        </Form.Item>\r\n        <Form.Item label=\"商品详情：\" name=\"detail\" wrapperCol={{ md: 8 }}>\r\n          <RichTextEditor ref={richTextEditor} />\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: \"50px\" }}>\r\n          提交\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUpdatePage;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\picture-wall\\PictureWall.tsx",[],["130","131"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\index.tsx",[],["132","133"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\product\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\login\\Login.tsx",[],["134","135"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\container\\Container.tsx",[],["136","137"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\category\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\header\\Header.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\user\\User.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\bar\\Bar.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\config.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\config\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\reducer.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\LeftMenu.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\left-menu\\menu-config.js",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\addUpdate.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\App.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\actions.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\category\\Category.tsx",["138"],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\login\\constants.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\home\\Home.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\role\\Role.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\hooks.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\login.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\request.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\components\\rich-text-editor\\RichTextEditor.tsx",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\pages\\product\\Product.tsx",["139"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, shallowEqual } from \"react-redux\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport { Card, Button, Select, Input, Table } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { ColumnsType } from \"antd/es/table\";\r\nimport \"./Product.scss\";\r\nimport { PAGE_SIZE } from \"../../config\";\r\nimport {\r\n  getProductAction,\r\n  updateStatusAction,\r\n  updateSearchTypeAction,\r\n  updateSearchValueAction,\r\n  updateSearchListAction,\r\n} from \"../../redux/product/actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductPage: React.FC = () => {\r\n  // router hook\r\n  const history = useHistory();\r\n  // redux hooks\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(\r\n    (state) => state.product.isLoading,\r\n    shallowEqual\r\n  );\r\n  const isRest = useSelector((state) => state.product.isRest, shallowEqual);\r\n  const keyWord = useSelector((state) => state.product.keyWord, shallowEqual);\r\n  const isSearch = useSelector((state) => state.product.isSearch, shallowEqual);\r\n  const searchType = useSelector(\r\n    (state) => state.product.searchType,\r\n    shallowEqual\r\n  );\r\n  const productList = useSelector(\r\n    (state) => state.product.productList,\r\n    shallowEqual\r\n  );\r\n  const { list, total, pageNum, pageSize } = productList;\r\n  const dataSource = list;\r\n\r\n  const columns: ColumnsType<any> = [\r\n    {\r\n      title: \"商品名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"商品描述\",\r\n      dataIndex: \"desc\",\r\n      key: \"desc\",\r\n      width: \"50%\",\r\n    },\r\n    {\r\n      title: \"价格\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      render: (price) => \"￥\" + price,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      key: \"status\",\r\n      render: (item) => {\r\n        const { status } = item;\r\n        return (\r\n          <div className=\"product-status\">\r\n            <div>{status === 1 ? \"在售\" : \"已停售\"}</div>\r\n            <Button\r\n              type=\"link\"\r\n              danger={status === 1 ? true : false}\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateStatusAction({\r\n                    productId: item._id,\r\n                    status: status === 1 ? 2 : 1,\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              {status === 1 ? \"下架\" : \"上架\"}\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n      align: \"center\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      // dataIndex: \"operation\",\r\n      key: \"operation\",\r\n      render: (item) => {\r\n        const { _id } = item;\r\n        return (\r\n          <div className=\"product-operation\">\r\n            <Button\r\n              type=\"link\"\r\n              onClick={(e) =>\r\n                history.push({\r\n                  pathname: `/prod/product/detail/${_id}`,\r\n                  state: item,\r\n                })\r\n              }\r\n            >\r\n              详情\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={(e) => history.push({\r\n                pathname:`/prod/product/addUpdate/${_id}`,\r\n                state:item\r\n              })}\r\n            >\r\n              修改\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n      align: \"center\",\r\n      width: \"10%\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isRest || list.length === 0) {\r\n      dispatch(getProductAction({ pageNum: 1, pageSize: PAGE_SIZE }));\r\n    }\r\n  }, [dispatch, isRest]);\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <div>\r\n          <Select\r\n            defaultValue=\"productName\"\r\n            style={{ width: 120 }}\r\n            onChange={(value, option) => {\r\n              dispatch(updateSearchTypeAction(value));\r\n            }}\r\n          >\r\n            <Option value=\"productName\">按名称搜索</Option>\r\n            <Option value=\"productDesc\">按描述搜索</Option>\r\n          </Select>\r\n          <Input\r\n            placeholder=\"关键字\"\r\n            className=\"product-input\"\r\n            value={keyWord}\r\n            onChange={(e) => dispatch(updateSearchValueAction(e.target.value))}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={(e) => {\r\n              dispatch(\r\n                updateSearchListAction({\r\n                  searchType,\r\n                  keyWord,\r\n                  pageNum: 1,\r\n                  pageSize,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            搜索\r\n          </Button>\r\n        </div>\r\n      }\r\n      extra={\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={(e) => history.push(\"/prod/product/addUpdate\")}\r\n        >\r\n          <PlusOutlined />\r\n          添加商品\r\n        </Button>\r\n      }\r\n    >\r\n      <Table\r\n        rowKey=\"_id\"\r\n        loading={isLoading}\r\n        pagination={{\r\n          total: total,\r\n          pageSize: PAGE_SIZE,\r\n          current: pageNum,\r\n          onChange: (page, pageSize) => {\r\n            if (isSearch) {\r\n              dispatch(\r\n                updateSearchListAction({\r\n                  searchType,\r\n                  keyWord,\r\n                  pageNum: page,\r\n                  pageSize: pageSize as number,\r\n                })\r\n              );\r\n            } else {\r\n              dispatch(\r\n                getProductAction({\r\n                  pageNum: page,\r\n                  pageSize: pageSize as number,\r\n                })\r\n              );\r\n            }\r\n          },\r\n        }}\r\n        bordered\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\redux\\store.ts",[],"C:\\Users\\Administrator\\Desktop\\ReactTS\\react-ts-project\\src\\services\\product.ts",[],{"ruleId":"140","severity":1,"message":"141","line":49,"column":6,"nodeType":"142","endLine":49,"endColumn":16,"suggestions":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"144","replacedBy":"150"},{"ruleId":"146","replacedBy":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"146","replacedBy":"153"},{"ruleId":"140","severity":1,"message":"154","line":118,"column":6,"nodeType":"142","endLine":118,"endColumn":8,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"156","line":131,"column":6,"nodeType":"142","endLine":131,"endColumn":24,"suggestions":"157"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form', 'localtion.state', and 'match.id'. Either include them or remove the dependency array.","ArrayExpression",["158"],"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],["159"],["160"],["159"],["160"],"React Hook useCallback has missing dependencies: 'dispatch' and 'form'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'list.length'. Either include it or remove the dependency array.",["162"],{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch, form, localtion.state, match.id]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, form]",{"range":"171","text":"172"},"Update the dependencies array to be: [dispatch, isRest, list.length]",{"range":"173","text":"174"},[1436,1446],"[dispatch, form, localtion.state, match.id]",[2939,2941],"[dispatch, form]",[3561,3579],"[dispatch, isRest, list.length]"]